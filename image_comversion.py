from fastapi import FastAPI, UploadFile, File, HTTPException, Request
from fastapi.responses import HTMLResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from PIL import Image
import os

app = FastAPI()

# Define directory paths
static_dir = os.path.join(os.path.dirname(__file__), "static")
templates_dir = os.path.join(os.path.dirname(__file__), "templates")

# Mount static directory for serving static files
app.mount("/static", StaticFiles(directory=static_dir), name="static")

# Use Jinja2Templates for loading HTML templates
templates = Jinja2Templates(directory=templates_dir)

@app.get("/", response_class=HTMLResponse)
async def index(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})

@app.post("/upload/")
async def upload_file(exe_file: UploadFile = File(...)):
    try:
        # Create uploads directory if it doesn't exist
        uploads_dir = os.path.join(os.path.dirname(__file__), "uploads")
        os.makedirs(uploads_dir, exist_ok=True)
        
        # Save uploaded file to uploads directory
        filename = os.path.join(uploads_dir, exe_file.filename)
        with open(filename, "wb") as f:
            f.write(exe_file.file.read())
        
        return {"filename": filename}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/convert/")
async def convert_file(filename: str):
    try:
        # Perform conversion here
        input_filepath = os.path.join(os.path.dirname(__file__), "uploads", filename)
        output_filepath = input_filepath.replace(".", "_output.")
        convert_to_image(input_filepath, output_filepath)
        
        return {"output_filename": output_filepath}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/show/")
async def show_image(output_filename: str, request: Request):
    try:
        # Render show.html template with the image path
        image_path = f"/static/{output_filename}"
        return templates.TemplateResponse("show.html", {"request": request, "image_path": image_path})
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

def convert_to_image(input_file, output_file):
    # Example function to convert input_file to an image and save it to output_file
    with Image.open(input_file) as img:
        img.save(output_file)

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="127.0.0.1", port=8000)
