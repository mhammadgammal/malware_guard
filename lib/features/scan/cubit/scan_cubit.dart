import 'package:bloc/bloc.dart';
import 'package:dio/dio.dart';
import 'package:file_picker/file_picker.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:malware_guard/core/networking/dio_client.dart';
import 'package:meta/meta.dart';

import '../../../core/networking/api_end_points.dart';

part 'scan_state.dart';

class ScanCubit extends Cubit<ScanState> {
  ScanCubit() : super(ScanInitial());

  static ScanCubit get(context) => BlocProvider.of(context);
  String path = '';
  bool isLoading = false;

  Future<FilePickerResult?> _openPicker() async =>
      await FilePicker.platform.pickFiles();

  void postExe() async {
    var picked = await _openPicker();
    if (picked != null) {
      final fileBytes = picked.files.first.bytes;
      final fileName = picked.files.first.name;
      final formData = FormData();
      // print('file name: $fileName');
      // print('file bytes: $fileBytes');

      // File? exeFile;
      // setState(() {
      //   exeFile = File.fromRawPath(fileBytes!);
      // });
      formData.files.add(
        MapEntry(
          'exe_file',
          MultipartFile.fromBytes(
            fileBytes!,
            filename: fileName,
          ),
        ),
      );
      var response = await DioClient.post(ApiEndPoints.upload, formData);
      //  var xx =await DioClient.get('${ApiEndPoints.getImage}/${response.data['image_path']}');

      // print(response.data);
      // print(xx.data);
      path = '${ApiEndPoints.baseUrl}get_image/${response.data['image_path']}';
      isLoading = true;
      print(path);

      emit(ExePostState());
    }
  }
}
